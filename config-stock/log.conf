# Those statements configure the logging services for each logging
# level supported by syslog.  The driver parameter is where the
# logging statements will be sent.  It can be anything of: syslog,
# stderr.  The filter parameter is a boolean (1/0) flag indicating if
# logging statements at this emergency level should be filtered based
# on channel names.  For example, emergency messages from any channels
# should arrive at destination (filter = 0) but not all debug or info
# message are useful and can be filtered depending on what channel the
# message comes from.  KNP protocol message are especially verbose and
# should be filtered out in a production server.

log_emergency.driver = "syslog";
log_emergency.filter = "0";

log_alert.driver = "syslog";
log_alert.filter = "0";

log_critical.driver = "syslog";
log_critical.filter = "0";

log_error.driver = "syslog";
log_error.filter = "0";

log_warning.driver = "syslog";
log_warning.filter = "0";

log_notice.driver = "syslog";
log_notice.filter = "0";

log_info.driver = "syslog";
log_info.filter = "1";

log_debug.driver = "syslog";
log_debug.filter = "1";

# Logging channels, space-separated list of any of the following items:
#   log     - Logging API
#   knp     - Protocol handler (verbose)
#   server  - Master server process
#   client  - Client process
#   db      - Database
#   shared  - Shared data module
#   config  - Configuration (very verbose)
log_channel.enabled = "log server client db ldap filter";

