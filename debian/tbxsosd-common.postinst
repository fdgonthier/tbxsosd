#
# Copyright (C) 2006-2012 Opersys inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/bin/sh
# postinst script for tbxsosd packages.

set -e

OLD_SSL_DIR=/etc/teambox/ssl
SSL_DIR=/etc/teambox/tbxsosd/ssl

# Move the SSL configuration files in package version 1.4
move_ssl_14() {
    if [ -d $SSL_DIR ] && [ -d $OLD_SSL_DIR ]; then
        # Move the whole directory
        cp $OLD_SSL_DIR/* /etc/teambox/tbxsosd/ssl
        rm -rf $OLD_SSL_DIR
        # Remove the links in the SSL directory, they will be regenerated later.
        find $SSL_DIR -type l -exec rm {} \;
    fi
}

# Check the consistency of SSL certificates.
check_pair() {
    local f1=$1 f2=$2
    # Just return if the both files in the pair don't exist.
    [ ! -e $f1 ] && [ ! -e $f2 ] && return 1
    # If any part of the pair isn't present, bail out with an error.
    if [ -e $f1 ] && [ ! $f2 ]; then
        echo "Inconsistent SSL key, missing $f2."
        exit 1
    fi
    if [ -e $f2 ] && [ ! $f1 ]; then
        echo "Inconsistent SSL key, missing $f1."
        exit 1
    fi
    # This means the SSL key/cert pair exist.
    return 0
}

# Link active.crt/active.key to the right certificate, giving priority to $first
# if it exists then to $second if it doesn't.
link_cert() {
    local first=$1 second=$2

    if [ ! -e $SSL_DIR/active.$ext ] || [ -L $SSL_DIR/active.$ext ]; then
        if check_pair $SSL_DIR/$first.key $SSL_DIR/$first.crt; then
            ln -sf $SSL_DIR/$first.crt $SSL_DIR/active.crt 
            ln -sf $SSL_DIR/$first.key $SSL_DIR/active.key 
        elif check_pair $SSL_DIR/$second.key $SSL_DIR/$second.crt; then
            ln -sf $SSL_DIR/$second.crt $SSL_DIR/active.crt
            ln -sf $SSL_DIR/$second.key $SSL_DIR/active.key 
        else
            echo "Unable to select active SSL key/certificate pair."
            exit 1
        fi
    fi
}

gen_cert() {
    # Create the SSL key if it doesn't exist.
    if [ ! -f $SSL_DIR/local.key ] && [ ! -f $SSL_DIR/local.crt ]; then
        # Generate the certificate.
        openssl req -x509 -new -nodes \
            -days 9999 \
            -keyout $SSL_DIR/local.key \
            -config /usr/share/teambox/tbxsosd/ssl/kps-base.req \
            -out $SSL_DIR/local.crt
        
        # Make sure the key is hidden.
        chmod 400 $SSL_DIR/local.key
    fi
}

case "$1" in
    configure)
        if [ ! -z "$2" ]; then
            if dpkg --compare-versions $2 le 1.4; then
                # Move the SSL configuration
                move_ssl_14
            fi
        fi

        # teambox/teambox
        if ! getent passwd tbxsosd > /dev/null; then
            useradd tbxsosd
        fi
        if ! getent group tbxsosd > /dev/null; then
            groupadd tbxsosd
        fi

        # Change ownership of the data directory.
        mkdir -p /var/cache/teambox
        mkdir -p /etc/teambox/tbxsosd/ssl

        chown tbxsosd.tbxsosd /var/cache/teambox       

        # Touch web.conf to bring it to life.
        if [ ! -f /etc/teambox/tbxsosd/web.conf ]; then
            touch /etc/teambox/tbxsosd/web.conf
        fi

        # Give teambox group read-write access to web.conf.
        chgrp teambox /etc/teambox/tbxsosd/web.conf
        chmod g+rw /etc/teambox/tbxsosd/web.conf
     
        # Give teambox group read-write access to some teambox activation directories.
        mkdir -p /etc/teambox/act/
        chmod 770 /etc/teambox/act/
        chgrp teambox /etc/teambox/act/
        mkdir -p /etc/teambox/act/archive_bundle
        chmod 770 /etc/teambox/act/archive_bundle
        chgrp teambox /etc/teambox/act/archive_bundle
        mkdir -p /etc/teambox/act/activation
        chmod 770 /etc/teambox/act/activation
        chgrp teambox /etc/teambox/act/activation
 
        # Create the initial tbxsosd.conf link in /etc, but don't
        # create it if there is still a valid link.
        if ! readlink -qe /etc/teambox/tbxsosd/tbxsosd.conf >/dev/null; then
            ln -fs /usr/share/teambox/tbxsosd/config-stock/tbxsosd.conf \
                /etc/teambox/tbxsosd/tbxsosd.conf
        fi

        # Generate the local SSL key/certificate pair.
        gen_cert

        # Link to the right SSL key/certificate pair.
        link_cert activation local
        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

#DEBHELPER#

exit 0


